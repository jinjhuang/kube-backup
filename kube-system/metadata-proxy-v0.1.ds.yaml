apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  annotations: {}
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: metadata-proxy
    kubernetes.io/cluster-service: 'true'
    version: v0.1
  name: metadata-proxy-v0.1
  namespace: kube-system
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: metadata-proxy
      kubernetes.io/cluster-service: 'true'
      version: v0.1
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
      creationTimestamp: null
      labels:
        k8s-app: metadata-proxy
        kubernetes.io/cluster-service: 'true'
        version: v0.1
    spec:
      containers:
      - image: gcr.io/google_containers/metadata-proxy:v0.1.9
        imagePullPolicy: IfNotPresent
        name: metadata-proxy
        resources:
          limits:
            cpu: 30m
            memory: 25Mi
          requests:
            cpu: 30m
            memory: 25Mi
        securityContext:
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      - command:
        - /monitor
        - --stackdriver-prefix=container.googleapis.com/internal/addons
        - --api-override=https://monitoring.googleapis.com/
        - --source=metadata_proxy:http://127.0.0.1:989?whitelisted=request_count
        - --pod-id=$(POD_NAME)
        - --namespace-id=$(POD_NAMESPACE)
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: gcr.io/google_containers/prometheus-to-sd:v0.2.2
        imagePullPolicy: IfNotPresent
        name: prometheus-to-sd-exporter
        resources:
          limits:
            cpu: 2m
            memory: 20Mi
          requests:
            cpu: 2m
            memory: 20Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: Default
      hostNetwork: true
      nodeSelector:
        beta.kubernetes.io/metadata-proxy-ready: 'true'
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: metadata-proxy
      serviceAccountName: metadata-proxy
      terminationGracePeriodSeconds: 30
  templateGeneration: 1
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
